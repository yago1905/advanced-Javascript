(()=>{"use strict";Vue.component("cart",{data:()=>({cartUrl:"/getBasket.json",cartItems:[],amount:0,imgCart:"https://placehold.it/50x100",showCart:!1}),mounted(){this.$parent.getJson("/api/cart").then((t=>{for(let e of t.contents)e.imgPath=`img/product-card-${e.id_product}.jpg`,this.$data.cartItems.push(e);this.$data.amount=t.amount}))},methods:{addProduct(t){let e=this.cartItems.find((e=>e.id_product===t.id_product));if(e)this.$parent.putJson(`/api/cart/${e.id_product}`,{quantity:1}).then((t=>{1===t.result&&(e.quantity++,this.$data.amount+=e.price)}));else{const e=Object.assign({quantity:1},t);this.$parent.postJson("/api/cart",e).then((r=>{1===r.result&&(this.cartItems.push(e),this.$data.amount+=t.price)}))}},remove(t){t.quantity>1?this.$parent.putJson(`/api/cart/${t.id_product}`,{quantity:-1}).then((e=>{1===e.result&&(t.quantity--,this.$data.amount-=t.price)})):this.$parent.deleteJson(`/api/cart/${t.id_product}`).then((e=>{1===e.result&&(this.$data.amount-=t.price,this.cartItems.splice(this.cartItems.indexOf(t),1))}))},minusItem(t){}},template:'\n     <div class="header-right">\n    <div class="header-right__cart" @click="showCart = !showCart">\n        <img src="img/cart.svg" alt="cart">\n    </div>\n    \n    <div class=" header__cart" v-show="showCart">\n        <div class="header__cart2">\n            \n            <cart-item v-for="item of cartItems" \n            :key="item.id_product" \n            :img="item.imgPath" \n            :cart-item="item" \n            @remove="remove" \n            @minus="minusItem" \n            @add="addProduct">\n            </cart-item>\n    \n            <div class="header-cart__flex header-cart__flex_price pink">\n                <p>TOTAL</p>\n                <p>{{ this.$data.amount }}</p>\n            </div>    \n         </div>\n    </div>\n</div>'}),Vue.component("cart-item",{props:["img","cartItem"],template:'\n            <div class="cart_flex cart__block border">\n                <img :src="img" alt="product" width="72" height="85">\n                <div class="cart__product">\n                    <a class="header__cart_a" href="#">{{ cartItem.product_name }}</a>    \n                    <p class="header__cart_p">\n                        {{ cartItem.quantity }} \n                        <span class="header__cart_span"> x </span> \n                        $ {{ cartItem.price }}\n                    </p>\n                </div>\n                <div class="cart__action circle" @click="$emit(\'remove\', cartItem)">\n                    <i class="fas fa-times-circle"></i>\n                </div>\n        \n            </div>'}),cart,Vue.component("products",{data:()=>({filtered:[],products:[]}),mounted(){this.$parent.getJson("/api/products").then((t=>{for(let e of t)e.imgPath=`img/product-card-${e.id_product}.jpg`,this.$data.products.push(e),this.$data.filtered.push(e)}))},methods:{filter(t){let e=new RegExp(t,"i");this.filtered=this.products.filter((t=>e.test(t.product_name))),console.log(t)}},template:'<div class="product-flex">\n                    <product v-for="item of filtered" \n                    :key="item.id_product"                    \n                    :product="item"\n                    :img="item.imgPath" \n                    @add-product="$parent.$refs.cart.addProduct"></product>   \n                </div>'}),Vue.component("product",{props:["product","img"],template:'<div class="product">\n            <a href="#">\n                <img class="product-img" :src="img" alt="product">\n            </a>\n            <div class="product-text">\n                <a class="product-text-name" href="#">{{product.product_name}}</a>\n                <p class="product-text-price">$ {{product.price}}</p>\n            </div>\n            <a class="product-add product-add__border " href="#" @click="$emit(\'add-product\', product)">\n                <img class="cart_of_add" src="img/cart_of_add.svg" alt="add">Add to Cart</a>\n            <a class="product-add2 product-add__border" href="#">\n                <i class="fas fa-retweet"></i></a>\n            <a class="product-add3 product-add__border" href="#">\n                <i class="far fa-heart"></i></a>\n </div>'}),products,Vue.component("search",{data:()=>({userSearch:""}),template:'\n            <form class="form" action="#" @submit.prevent="$parent.$refs.products.filter(userSearch)">\n                <div class="form-browses">\n                    <div class="form-browse"><p class="browse__text">Browse<span><i\n                            class="fas fa-caret-down browse__icon"></i></span></p></div>\n                    <div class="browse__drop">\n                        <div class="browse__drop-flex">\n                            <h3 class="browse__drop-h3">Woman</h3>\n                            <ul class="browse__drop-ul">\n                                <li><a href="#" class="browse__drop-link">Dresses</a>\n                                </li>\n                                <li><a href="#" class="browse__drop-link">Tops</a>\n                                </li>\n                                <li><a href="#" class="browse__drop-link">Sweaters/Knits</a>\n                                </li>\n                                <li><a href="#" class="browse__drop-link">Jackets/Coats</a>\n                                </li>\n                                <li><a href="#" class="browse__drop-link">Blazers</a>\n                                </li>\n                                <li><a href="#" class="browse__drop-link">Denim</a>\n                                </li>\n                                <li><a href="#" class="browse__drop-link">Leggings/Pants</a>\n                                </li>\n                                <li><a href="#" class="browse__drop-link">Skirts/Shorts</a>\n                                </li>\n                                <li><a href="#" class="browse__drop-link">Accessories </a>\n                                </li>\n                            </ul>\n                        </div>\n\n                    </div>\n                </div>\n\n                <input class="form-text" type="text" placeholder="Search for Item..." v-model="userSearch">\n                <button class="form-button" type="submit" ><i class="fas fa-search btn_search"></i></button>\n\n            </form>'}),search,Vue.component("error",{data:()=>({text:""}),computed:{isVisible(){return""!==this.text}},template:'\n            <div class="error-block" v-if="isVisible">\n                    <p class="error-msg">\n                    <button class="close-btn" @click="text=\'\'">&times;</button>\n                    {{ text }}\n            </p>\n            </div>\n     '}),error,new Vue({el:"#app",data:{userSearch:""},methods:{getJson(t){return fetch(t).then((t=>t.json())).catch((t=>{this.$refs.error.text=t}))},postJson(t,e){return fetch(t,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then((t=>t.json())).catch((t=>{this.$refs.error.text=t}))},putJson(t,e){return fetch(t,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)}).then((t=>t.json())).catch((t=>{this.$refs.error.text=t}))},deleteJson(t){return fetch(t,{method:"DELETE",headers:{"Content-Type":"application/json"}}).then((t=>t.json())).catch((t=>{this.$refs.error.text=t}))}},mounted(){}})})();